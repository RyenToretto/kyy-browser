<import name="my-avatar" src="apex-ui/components/avatar/index"></import>
<import name="my-dialog" src="apex-ui/components/dialog/index"></import>
<template>
  <div class="page-container">
    <search-bar></search-bar>
    <div class="content">
      <web
        class="web-comp"
        src="{{websrc}}"
        id="web"
        allowthirdpartycookies="true"
        onpagestart="onPageStart"
        onpagefinish="onPageFinish"
        ontitlereceive="onTitleReceive"
        onerror="onError"
      ></web>
    </div>
    <div
      if="{{suspensionDialog}}"
      style="right: {{menuStyle.left+'px'}}; top:{{menuStyle.top+'px'}};position: fixed;"
      ontouchstart="menuTouchStart"
      ontouchmove="menuTouchMove"
      ontouchend="menuTouchEnd"
    >
      <my-avatar src="{{suspensionData.picture}}" size="default" @click="getSuspension"></my-avatar>
    </div>
    <!-- 广告 -->
    <div class="adimg-box" if="{{adDialog}}" @click="close">
      <div class="box">
        <div class="adClose" @click="closeDialog">
          <image class="c-img" src="../../assets/images/dialong.png"></image>
        </div>
        <div class="adImg" @click="openUrl">
          <image class="img" style="width: 400px;" src="{{adData.picture}}"></image>
        </div>
      </div>
    </div>
    <!-- 下载弹窗 -->
    <my-dialog
      visible="{{open}}"
      title="保存文件"
      content="{{content}}"
      onaffirm="affirm"
      oncancel="closedol"
    ></my-dialog>
  </div>
</template>

<import name="search-bar" src="../common/bar/search-bar"></import>
<script>
import device from '@system.device';
import router from '@system.router';
import pkg from '@system.package';
import request from '@system.request';
import prompt from '@system.prompt';
export default {
  props: ['websrc'],
  data: {
    suspensionDialog: false,
    tabList: [],
    selectedTab: 0,
    category: "",
    hot: {
      list: [],
      pageNo: 1,
      pageSize: 10,
      total: null,
      load: true
    },
    header: {
      deviceId: "",
      token: "",
    },
    navs: [],
    category: '插屏',
    scene: '其它',
    adData: '',
    adDialog: false,
    suspensionData: "",
    historyData: [],
    menuStyle: {
      left: 60,
      top: 200,
      disX: 0,
      disY: 0
    },
    beginDrag: false,
    devices: "",
    content: "",
    hUrl: "",
    titleName: "",
    open: false,
    content: "",
    dowNowList: [],
  },
  onInit() {
    // 获取设备id
    $utils.getStorage('deviceId').then(value => {
      this.header.deviceId = value;
    })
    // 判断是否登录状态
    $utils.getStorage('token').then(value => {
      this.header.token = value;
    })
    // 获取搜索历史
    $utils.getStorage('historyData').then(value => {
      this.historyData = JSON.parse(value);
    })
    this.$on('arrowLeft', this.arrowLeftIcon);
    this.$on('arrowRight', this.arrowRightIcon);
    this.$on('evtType', this.evtType);
    $utils.getStorage('dowNowList').then(value => {
      this.dowNowList = JSON.parse(value);
    })
    let _this = this;
    device.getInfo({
      success: function (ret) {
        _this.devices = ret;
      }
    })
  },
  // 广告跳转
  openUrl() {
    let _this = this;
    pkg.hasInstalled({
      package: _this.adData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.adData.link
          })
        } else {
          router.push({
            uri: _this.adData.fallbackLink
          })
        }
        _this.getAllAd("click");
      },
    })
  },
  onReady() {
    this.showContent = false;
  },
  // 获取广告
  getAd() {
    let para = new Object();
    para.category = this.category;
    para.scene = this.scene;
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        if (data.ad) {
          this.adData = data.ad;
          this.adDialog = true;
          this.getAllAd("open");
        }
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  getAllAd(val) {
    let para = new Object();
    para.id = this.adData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  closeDialog() {
    if (this.adData.openOnClose == true) {
      this.getAllAd("click");
      router.push({
        uri: this.adData.link
      })
    }
    this.adDialog = false;
  },
  close() {
    this.adDialog = false;
  },
  getSuspensionAd() {
    let para = new Object();
    para.category = '浮窗';
    para.scene = '其它';
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        if (data.ad) {
          this.suspensionDialog = true;
          this.suspensionData = data.ad;
          console.log(this.suspensionData);
          this.clickSuspension("open");
        }
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 悬浮广告跳转
  getSuspension() {
    let _this = this;
    pkg.hasInstalled({
      package: _this.suspensionData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.suspensionData.link
          })
        } else {
          router.push({
            uri: _this.suspensionData.fallbackLink
          })
        }
        _this.clickSuspension("click");
      },
    })
  },
  // 悬浮广告的点击
  clickSuspension(val) {
    let para = new Object();
    para.id = this.suspensionData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 历史缓存
  addHistoryData(title, url) {
    var now = new Date();
    var year = now.getFullYear(); //得到年份
    var month = now.getMonth() + 1;//得到月份
    var date = now.getDate();//得到日期
    let nowDate = year + "-" + month + "-" + date;
    if (this.historyData.length > 20) {
      this.historyData.pop();
      this.historyData.unshift({ time: nowDate, list: { title: title, url: url } });
      $utils.setStorage('historyData', this.historyData);
    } else {
      this.historyData.unshift({ time: nowDate, list: { title: title, url } });
      $utils.setStorage('historyData', this.historyData);
    }
  },
  onPageStart(e) {
    if (e.url.indexOf(".apk") != -1 &&  ( e.url.indexOf("http:") != -1 || e.url.indexOf("https:") != -1)) {
      this.content = e.url
      this.open = true;
    } 
    this.hUrl = e.url;
  },
  onTitleReceive(e) {
    if (this.titleName != e.title) {
      this.titleName = e.title;
      this.getSuspensionAd();
      this.getAd();
      let url = this.hUrl + "/s?wd=" + this.titleName
      this.addHistoryData(this.titleName, url);
      this.changeAction(this.titleName, url)
    }
    
  },
  onError() {
    console.info('### pageError ###')
  },
  arrowLeftIcon() {
    this.isCanBack()
  },
  arrowRightIcon() {
    this.isCanForward()
  },
  isCanForward() {
    this.$element('web').canForward({
      callback: function (e) {
        if (e) {
          this.$element('web').forward()
        }
      }.bind(this)
    })
  },
  isCanBack() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
  },
  menuTouchStart(event) {
    this.beginDrag = true;
    this.menuStyle.disX = event.touches[0].offsetX;
    this.menuStyle.disY = event.touches[0].offsetY
  },
  menuTouchMove(event) {
    if (this.beginDrag) {
      event.stopPropagation()
      let resetDeviceScreenWidth = event.touches[0].clientX > this.devices.windowWidth ? ((this.devices.windowWidth / this.devices.screenDensity) * 4) : this.devices.windowWidth;
      let resetDeviceScreenHeight = event.touches[0].clientY > this.devices.windowHeight ? ((this.devices.windowHeight / this.devices.screenDensity) * 3) : this.devices.windowHeight;
      let menuStyleLeft = event.touches[0].clientX - this.menuStyle.disX;
      let menuStyleTop = event.touches[0].clientY - this.menuStyle.disY;
      this.menuStyle.left = menuStyleLeft < 0 ? (menuStyleLeft > (resetDeviceScreenWidth - 104) ? resetDeviceScreenWidth + 104 : menuStyleLeft) : 10;
      this.menuStyle.top = menuStyleTop > 0 ? (menuStyleTop > (resetDeviceScreenHeight - 800) ? resetDeviceScreenHeight - 800 : menuStyleTop) : 200;
    }
  },
  menuTouchEnd() {
    this.beginDrag = false;
    this.menuStyle.disX = this.menuStyle.disY = 0;
  },
  changeAction(title, url) {
    this.$emit('emitEvt', { title: title, url: url })

  },
  onPageFinish(e) {
  },
  onBackPress() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
    return true;
  },
  evtType() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
  },
  affirm() {
    let _this = this;
    request.download({
      url: _this.content,
      success: function (data) {
        prompt.showToast({
          message: '已加入下载队列'
        })

        if (_this.dowNowList.length > 15) {
          _this.dowNowList.pop();
          _this.dowNowList.unshift({ url: _this.content, token: data.token, state: false });
          $utils.setStorage('dowNowList', _this.dowNowList);

        } else {
          _this.dowNowList.unshift({ url: _this.content, token: data.token, state: false });
          $utils.setStorage('dowNowList', _this.dowNowList);
        }
      },
      fail: function (data, code) {
        prompt.showToast({
          message: code
        })
      }
    })
    _this.open = false;
  },
  closedol() {
    this.open = false;
  },
}
</script>

<style lang="less">
@import '../../assets/styles/index.less';
.ad-btn {
  width: 110px;
  height: 110px;
  position: fixed;
  top: 200px;
  right: 30px;
  .ad-img {
    width: 100px;
    height: 100px;
    align-content: center;
    border-radius: 50%;
  }
}
.content {
  flex: 1;
}
.adimg-box {
  width: 100%;
  position: fixed;
  margin: 0 auto;
  background-color: rgba(0, 0, 0, 0.4);
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  .box {
    width: 70%;
    background-color: #ffffff;
    border-radius: 40px;
    padding: 40px;
    .flex-box-mixins(column, center, center);
    .adClose {
      width: 100%;
      .flex-box-mixins(column, flex-end, flex-end);
      .c-img {
        width: 50px;
        height: 50px;
      }
    }
    .adImg {
      .flex-box-mixins(column, center, center);
      margin-top: 20px;
      width: 100%;
      .img {
        width: 100%;
      }
    }
  }
}
</style>
