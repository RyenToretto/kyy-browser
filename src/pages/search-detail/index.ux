<import name="my-avatar" src="apex-ui/components/avatar/index"></import>
<import name="my-dialog" src="apex-ui/components/dialog/index"></import>
<template>
  <div class="page-wrapper">
    <!-- 搜索 -->
    <div class="title-bar">
      <!-- <div class="search-box">
        <div class="search">
          <input type="text" id="search-input" class="search-input" value="{{titleName}}" />
        </div>
      </div> -->
      <search-input onsearch="search" title="{{titleName}}"></search-input>
    </div>
    <div if="{{suspensionDialog}}" 
        style="right: {{menuStyle.left+'px'}}; top:{{menuStyle.top+'px'}};position: fixed;"
        ontouchstart="menuTouchStart"
        ontouchmove="menuTouchMove"
        ontouchend="menuTouchEnd">
      <my-avatar @click="getSuspension" src="{{suspensionData.picture}}" size="default"></my-avatar>
    </div>
    <div class="content">
      <web
        class="web-comp"
        src="{{websrc}}"
        id="web"
        allowthirdpartycookies="true"
        onpagestart="onPageStart"
        onpagefinish="onPageFinish"
        ontitlereceive="onTitleReceive"
        onerror="onError"
      ></web>
    </div>
    <!-- 底部菜单 -->
    <div class="bottom">
      <div class="b-box" @click="arrowLeftIcon()">
        <image src="../../assets/images/left.png"></image>
      </div>
      <div class="b-box" @click="arrowRightIcon()">
        <image src="../../assets/images/right.png"></image>
      </div>
      <div class="b-box" @click="getPopup()">
        <image src="../../assets/images/index/set.png"></image>
      </div>
      <div class="b-box" @click="getCollect()">
        <image src="../../assets/images/index/collect.png"></image>
      </div>
      <div class="b-box" @click="getHome()">
        <image src="../../assets/images/index/index.png"></image>
      </div>
    </div>
    <div class="test" if="{{showContent}}" onclick="stopPropagation()">
      <div class="maskBox" @click="closeBox"></div>
      <div class="model translateYByEntry">
        <div class="popupBottom">
          <div class="avatar-box">
            <div class="avatar-img">
              <img src="{{defaultAvatar}}" />
            </div>
            <div class="login-btn">
              <text class="login-title" if="{{logined}}">已登录</text>
              <text class="login-title" else @click="login">点击登录</text>
              <text class="login-btn-title">欢迎使用XX浏览器</text>
            </div>
            <text class="btn" if="{{addFlag}}">已加入桌面</text>
            <text class="btn" else @click="addShortCut">加入桌面</text>
          </div>
          <div class="menu">
            <div class="menu-item" @click="getRouter('dol')">
              <image src="../../assets/images/index/download.png"></image>
              <text>下载管理</text>
            </div>
            <div class="menu-item" @click="addCollection">
              <image src="../../assets/images/index/collect-1.png"></image>
              <text>添加收藏</text>
            </div>
            <div class="menu-item" @click="getRouter('history')">
              <image src="../../assets/images/index/history.png"></image>
              <text>历史记录</text>
            </div>
            <div class="menu-item" @click="openDialog">
              <image src="../../assets/images/index/complaint.png"></image>
              <text>投诉反馈</text>
            </div>
            <div class="menu-item" @click="getRouter('set')">
              <image src="../../assets/images/index/set-btn.png"></image>
              <text>设置</text>
            </div>
            <div class="menu-item" @click="refresh">
              <image src="../../assets/images/index/refresh.png"></image>
              <text>刷新</text>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- 广告 -->
    <div class="adimg-box" if="{{adDialog}}" @click="closeAd">
      <div class="box">
        <div class="adClose" @click="closeDialog">
          <image class="c-img" src="../../assets/images/dialong.png"></image>
        </div>
        <div class="adImg" @click="openUrl">
          <image class="img" style="width: 400px;" src="{{adData.picture}}"></image>
        </div>
      </div>
    </div>
    <!-- 下载弹窗 -->
    <my-dialog
      visible="{{open}}"
      title="保存文件"
      content="{{content}}"
      onaffirm="affirm"
      oncancel="closedol"
    ></my-dialog>
    <!-- 反馈 -->
    <feedback if="{{feedbackDailog}}" @close="closeFeedback"></feedback>
    
  </div>
</template>
<import name="search-input" src="../../components/common/bar/search"></import>
<import  name="feedback" src="../../components/feedback/index"></import>
<script>
import router from '@system.router'
import prompt from '@system.prompt'
import shortcut from '@system.shortcut'
import pkg from '@system.package'
import ad from '@service.ad'
import request from '@system.request'
import device from '@system.device'
export default {
  data: {
    logined: false,
    feedbackDailog: false,
    adDialog: false,
    suspensionDialog: false,
    defaultAvatar: require('../../assets/images/index/default-avatar.png'),
    searchText: '',
    showContent: false,
    item: '',
    category: '插屏',
    scene: '其它',
    adData: '',
    websrc: '',
    titleName: '',
    addFlag: false,
    header: {
      deviceId: "",
      token: "",
    },
    suspensionData: "",
    allow: false,
    open: false,
    content: "",
    dowNowList: [],
    historyData: [],
    hUrl: "",
    menuStyle: {
      left: 60, 
      top: 200,
      disX: 0,
      disY: 0
    },
    beginDrag: false,
    device: "",
  },
  onInit() {
    this.showContent = false;
    this.websrc = this.searchText;
    this.titleName = this.title;
    // 获取设备id
    $utils.getStorage('deviceId').then(value => {
      this.header.deviceId = value;
      this.getSuspensionAd();
      let timer = setTimeout(() => {
        this.getAd();
      }, 3 * 1000)

    })
    // 判断是否登录状态
    $utils.getStorage('token').then(value => {
      this.header.token = value;
      this.logined = true;
    })
     // 获取搜索历史
       $utils.getStorage('historyData').then(value => {
        this.historyData = JSON.parse(value);
    })  
    // 是否加入桌面图标
    $utils.getStorage('addFlag').then(value => {
      if (JSON.parse(value) == true) {
        this.addFlag = true;
      } else {
        this.addFlag = false;
      }

    })
    this.$on('arrowLeft', this.arrowLeftIcon)
    this.$on('arrowRight', this.arrowRightIcon)
    $utils.getStorage('dowNowList').then(value => {
        this.dowNowList = JSON.parse(value);
    }) 
    let _this = this;
    device.getInfo({
      success: function (ret) {
       _this.device = ret;
      }
    })
  },
  // 广告跳转
  openUrl() {
    let _this = this;
    pkg.hasInstalled({
      package: _this.adData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.adData.link
          })
        } else {
          router.push({
            uri: _this.adData.fallbackLink
          })
        }
        _this.getAllAd("click");
      },
    })
  },
  // 获取插屏广告
  getAd() {
    let para = new Object();
    para.category = this.category;
    para.scene = this.scene;
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        if (data.ad) {
          this.adData = data.ad;
          this.adDialog = true;
          this.getAllAd("open");
        }
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 获取悬浮广告
  getSuspensionAd() {
    let para = new Object();
    para.category = '浮窗';
    para.scene = '其它';
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        if (data.ad) {
          this.suspensionDialog = true;
          this.suspensionData = data.ad;
          this.clickSuspension("open");
        }
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 悬浮广告跳转
  getSuspension() {
    let _this = this;
    pkg.hasInstalled({
      package: _this.suspensionData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.suspensionData.link
          })
        } else {
          router.push({
            uri: _this.suspensionData.fallbackLink
          })
        }
        _this.clickSuspension("click");
      },
    })
  },
  // 悬浮广告的点击
  clickSuspension(val) {
    let para = new Object();
    para.id = this.suspensionData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  getAllAd(val) {
    let para = new Object();
    para.id = this.adData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  search(e) {
  },
  getPopup() {
    this.showContent = true;
  },
  closeBox() {
    this.showContent = false
  },
  closeDialog() {
    if (this.adData.openOnClose == true) {
      this.getAllAd("click");
      router.push({
        uri: this.adData.link
      })
    }
    this.adDialog = false;
  },
  closeFeedback() {
    this.feedbackDailog = false;
  },
  openDialog() {
    this.showContent = false;
    this.feedbackDailog = true;
  },
  // 菜单跳转
  getRouter(type) {
    this.showContent = false;
    switch (type) {
      case 'dol':
        $utils.route2theUrl('pages/download')
        break;
      case 'history':
        $utils.route2theUrl('pages/history')
        break;
      case 'set':
        $utils.route2theUrl('pages/set', { logined: this.logined })
        break;
      default:
        break;
    }
  },
  // 添加收藏
  addCollection() {
    let para = new Object();
    para.title = this.titleName;
    para.url = this.hUrl;
    $apis.common.addFavorite(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        prompt.showToast({
          message: '添加成功'
        });
      } else {
        prompt.showToast({
          message: data.message
        })
      }
      this.showContent = false;
    })
  },
  // 登录
  login() {
    router.push({
      uri: 'pages/login'
    });
    this.showContent = false;
  },
  getHome() {
    router.push({
      uri: 'pages/index'
    });
  },
  getCollect() {
    router.push({
      uri: 'pages/collection'
    })
  },
  goBack() {
    router.back()
  },
  stopPropagation() {
  },
  // 加入桌面
  addShortCut() {
    let _this = this;
    shortcut.install({
      success: function (data) {
        _this.addFlag = true;
        _this.showContent = false;
        $utils.setStorage('addFlag', true);
      },
      fail: function (errmsg, errcode) {
      }
    })
  },
  refresh() {
    this.getAd();
    prompt.showToast({
      message: "刷新成功"
    });
    this.showContent = false;
  },
  closeAd() {
    this.adDialog = false;
  },
  onPageStart(e) {
    console.log(e)
    if (e.url.indexOf(".apk") != -1 &&  ( e.url.indexOf("http:") != -1 || e.url.indexOf("https:") != -1)) {
      this.content = e.url
      this.open = true;
    } 
    this.hUrl = e.url;
  },
  onTitleReceive(e) {
    this.titleName = e.title;
    this.addHistoryData( this.titleName, this.hUrl) 
  },
  getWord(){

  },
  onError() {
    console.info('### pageError ###')
  },
  arrowLeftIcon() {
    this.isCanBack()
  },
  arrowRightIcon() {
    this.isCanForward()
  },
  isCanForward() {
    this.$element('web').canForward({
      callback: function (e) {
        if (e) {
          this.$element('web').forward()
        }
      }.bind(this)
    })
  },
  isCanBack() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
  },
  enter() {

  },
  affirm() {
    let _this = this;
    request.download({
      url: _this.content,
      success: function (data) {
         prompt.showToast({
          message: '已加入下载队列'
         })
         
        if(_this.dowNowList.length > 15){
          _this.dowNowList.pop();
          _this.dowNowList.unshift({ url: _this.content, token: data.token, state: false  });
          $utils.setStorage('dowNowList', _this.dowNowList);
          
        }else{
           _this.dowNowList.unshift({ url: _this.content, token: data.token, state: false });
           $utils.setStorage('dowNowList', _this.dowNowList);
        }
      },
      fail: function (data, code) {
        prompt.showToast({
          message: code
         })
      }
    })
    _this.open = false;
  },
  closedol() {
    this.open = false;
  },
  addHistoryData(title, url) {
    var now = new Date();
    var year = now.getFullYear(); //得到年份
    var month = now.getMonth() + 1;//得到月份
    var date = now.getDate();//得到日期
    let nowDate = year + "-" + month + "-" + date;
    if (this.historyData.length > 20) {
      this.historyData.pop();
      this.historyData.unshift({ time: nowDate, list: { title: title, url: url } });
      $utils.setStorage('historyData', this.historyData);
    } else {
      this.historyData.unshift({ time: nowDate, list: { title: title, url } });
      $utils.setStorage('historyData', this.historyData);
    }
  },
  menuTouchStart(event) {
    this.beginDrag = true;
    this.menuStyle.disX = event.touches[0].offsetX;
    this.menuStyle.disY = event.touches[0].offsetY
  },
  menuTouchMove(event) {
    if (this.beginDrag) {
      event.stopPropagation()
      let resetDeviceScreenWidth = event.touches[0].clientX > this.device.windowWidth ? ((this.device.windowWidth / this.device.screenDensity) * 4) : this.device.windowWidth;
      let resetDeviceScreenHeight = event.touches[0].clientY > this.device.windowHeight ? ((this.device.windowHeight / this.device.screenDensity) * 3) : this.device.windowHeight;
      let menuStyleLeft = event.touches[0].clientX - this.menuStyle.disX;
      let menuStyleTop = event.touches[0].clientY - this.menuStyle.disY;
      this.menuStyle.left = menuStyleLeft < 0 ? (menuStyleLeft > (resetDeviceScreenWidth - 104) ? resetDeviceScreenWidth + 104 : menuStyleLeft) : 10;
      this.menuStyle.top = menuStyleTop > 0 ? (menuStyleTop > (resetDeviceScreenHeight - 800) ? resetDeviceScreenHeight - 800 : menuStyleTop) : 200;
    }
  },
  menuTouchEnd() {
    this.beginDrag = false;
    this.menuStyle.disX = this.menuStyle.disY = 0;
  },
  onBackPress() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
    return true;
  },
}
</script>

<style lang="less">
@import '../../assets/styles/index.less';
.page-wrapper {
  padding: 10px 30px;
  background-color: #fff;
  .title-bar {
    position: fixed;
    top: 0px;
    padding: 10px 30px;
    .search-box {
      width: 100%;
      background-color: #fff;
    }
  }
  .content {
    margin-top: 130px;
    flex: 1;
  }
  .content-none {
    flex-direction: column;
    width: 30%;
    height: 100%;
    margin: 0 auto;
    margin-top: 300px;
    justify-content: center;
    align-items: center;
    .noen {
      width: 100%;
      height: 100%;
      margin-bottom: 30px;
    }
  }
  .bottom {
    text-align: center;
    position: fixed;
    bottom: 0;
    width: 100%;
    height: 120px;
    z-index: 999;
    background-color: #fff;
    border-top: 1px solid rgba(149, 149, 149, 0.4);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 9999;
    .b-box {
      width: 100%;
      height: 100%;
      align-items: center;
      justify-content: center;
      image {
        /* width: 45px;
       height: 100%; */
        margin: 0px 50px;
      }
    }
    image {
      width: 44px;
      height: 44px;
      margin: 0px 50px;
    }
  }
}

.popupBottom {
  .flex-box-mixins(column, space-between, space-between);
  width: 100%;
  padding: 20px;
  .avatar-box {
    width: 100%;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    padding: 40px 40px 20px 0;
    margin: 0px 30px;
    .avatar-img {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      image {
        width: 100%;
        height: 100%;
        margin: 0;
      }
    }
    .login-btn {
      .flex-box-mixins(column, flex-start, flex-start);
      text-align: right;
      width: 40%;
      .login-title {
        font-size: 30px;
        font-weight: 600;
        color: #000;
        line-height: 60px;
      }
      .login-btn-title {
        font-size: 20px;
        font-weight: 400;
        color: #999999;
      }
    }
    .btn {
      width: 200px;
      background-color: #567aff;
      border-radius: 50px;
      color: #fff;
      height: 80px;
      line-height: 80px;
      font-size: 30px;
      text-align: center;
    }
  }
  .menu {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    font-size: 24px;
    font-weight: 400;
    color: #2c2c2c;
    image {
      width: 70px;
      height: 70px;
    }
    .menu-item {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 25%;
      margin: 20px 0;
      text-align: center;
    }
  }
}
@keyframes translateYByEntry {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-700px);
  }
}
@keyframes translateYByLeave {
  from {
    transform: translateY(-700px);
  }
  to {
    transform: translateY(0);
  }
}
.translateYByEntry {
  animation-name: translateYByEntry;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.translateYByLeave {
  animation-name: translateYByLeave;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.test {
  z-index: 9999;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.4);
  padding-bottom: 700px;
  .model {
    width: 100%;
    height: 600px;
    position: fixed;
    left: 0;
    bottom: -700px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    background-color: #ffffff;
    z-index: 10;
    padding-top: 50px;
    padding: 0px 30px;
    font-size: 30px;
    display: flex;
    flex-direction: column;
    .btn {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .img {
        width: 80px;
        height: 80px;
      }
    }
  }
}
.maskBox {
  width: 100%;
  height: 100%;
}

.adimg-box {
  width: 100%;
  position: fixed;
  background-color: rgba(0, 0, 0, 0.4);
  height: 100%;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  .box {
    width: 70%;
    background-color: #ffffff;
    border-radius: 40px; 
    padding: 40px;
    .flex-box-mixins(column, center, center);
    .adClose {
      width: 100%;
      .flex-box-mixins(column, flex-end, flex-end);
      .c-img {
        width: 50px;
        height: 50px;
      }
    }
    .adImg {
      .flex-box-mixins(column, center, center);
      width: 100%;
      margin-top: 20px;
      .img {
        width: 100%;
      }
    }
  }
}
</style>
