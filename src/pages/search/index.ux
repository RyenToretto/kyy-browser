<template>
  <div class="page-wrapper">
    <search-input-bar onsearch="search" ></search-input-bar>
    <div class="search-hot">
      <div class="hot-list">
        <text class="hot-item" for="hotList" @click="toSearch($item.title)">{{ $item.title | ellipsis}}</text>
      </div>
       <div class="search-title" if={{hotList.length}}>
        <text class="search-refresh" @click="delHostList">
          <image class="img" src="../../assets/images/del.png"></image>
        </text>
      </div>
      <div class="adimg-box" if={{dialog}}>
        <div class="close" @click="closeDialog"><image src="../../assets/images/dialong.png"></image></div>
        <text @click="openUrl" class="adImg"><image src="{{adData.picture}}"></image></text>
      </div>
    </div>
  </div>
</template>

<import name="search-input-bar" src="../../components/common/bar/search-input-bar"></import>
<script>
export default {
  private: {
    searchText: '',
    searchEngineId: '',
  },
  public: {
    dialog: true,
    hotList: [],
    category: 'default',
    scene: 'search',
    adData: '',
  },
  onInit() {
    // 获取搜索引擎id
    $utils.getStorage('searchEngineId').then(value => {
        this.searchEngineId = value;
    }) 
    this.getAd();
  },
  search(info) {
    this.searchText = info.detail
    // $utils.route2theUrl('pages/search-detail')
    // let para = new Object();
    // para.keyword = this.searchText;
    // para.searchEngineId = this.searchEngineId;
    //  $apis.common.getSearchLog(para).then((res) => {
    //   let data = JSON.parse(res.data);
    //   if (data.code == 0) {
        
    //   } else {
    //   prompt.showToast({
    //       message: data.message
    //     })
    //   }
    // })
  },
  delHostList() {

  },
  toSearch(val) {
    $utils.route2theUrl('pages/search-detail', {id: val})
  },
  // 获取广告
  getAd(){
    let para = new Object();
    para.category = this.category;
    para.scene = this.scene;
    $apis.common.getAd(para).then((res) =>{
      let data = JSON.parse(res.data);
      if (data.code == 0) {
           this.adData = data.ad;
           this.getAllAd("open");
      }else{
         prompt.showToast({
          message: data.message
        })
      }
   })
  },
  // 广告跳转
  openUrl(){
  this.getAllAd("click");
   location.href = this.adData.link;
  },
  // 广告点击，展示加载完请求的事件
  getAllAd(val) {
    let para = new Object();
    para.id = this.adData.link;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 关闭弹窗
  closeDialog(){
      this.dialog = false;
  },
  ellipsis (value) {
      if (!value) return ''
      if (value.length > 40) {
        return value.slice(0,40) + '...'
      }
      return value
    }
}
</script>

<style lang="less">
@import '../../assets/styles/index.less';
.page-wrapper {
  background-color: #fff;
}
.search-hot {
  padding: 20px 30px;
  width: 100%;
  .flex-box-mixins(column, flex-start, flex-start);
  .search-title {
    width: 100%;
    margin-bottom: 30px;
    justify-content: flex-end;
    .img{
        width: 40px;
        height: 40px;
    }
  }
  .hot-list {
    width: 100%;
    flex-wrap: wrap;
  }
  .hot-item {
    height: 70px;
    align-items: center;
    background-color: #F7F8FB;
    border-radius: 44px;
    font-size: 26px;
    color: #000;
    padding: 0px 15px;
    text-align: center;
    border-radius: 30px;
    margin: 10px 40px 10px 0;
  }
 .adimg-box{
  padding: 0px 60px;
   position: fixed;
   bottom: 100px;
  .flex-box-mixins(column, flex-end, flex-end);
   .close{
    width: 50px;
    height: 50px;
    margin-top: 20px;
  }
  .adImg{
    width: 90%;
    margin: 0 auto;
  }
  }
  
}

</style>
