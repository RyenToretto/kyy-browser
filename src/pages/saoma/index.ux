<template>
  <div class="page-wrapper">
    <!-- <title-bar title="{{title}}" show-back="{{true}}" icon="" onget-click="getClick"></title-bar> -->
    <div class="container">
      <div class="title-bar">
      <image style="margin-right:60px;" src="../../assets/images/saoyisao.png"  onclick="goBack"></image> 
      <text class="center-title">扫码</text>
      </div>
      <camera
        id="camera"
        class="camera"
        deviceposition="{{deviceposition}}"
        flash="{{flash}}"
        onerror="handlerError"
      ></camera>
      <div class="btn">
        <div @click="switchFlash" class="takeImg">
          <image style="width: 60px;height: 60px;" src="../../assets/images/diantong.png"></image>
        </div>
        <div @click="takePhoto" class="takeImg">
          <text style="color:#fff;font-size:40px;">扫码</text>
        </div>
        <div @click="takeImg" class="takeImg">
          <image style="width: 60px;height: 60px;" src="../../assets/images/takeimg.png"></image>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import media from '@system.media'
// import QRCode from 'qrcode'
import router from '@system.router'
export default {
  private: {
    componentName: '扫码',
    pictureUrl: '',
    photoQuality: 'normal',
    deviceposition: "back",
    flash: "auto",
    flashText: '自动',
    title: "扫码",
  },
  onInit() {
    // let timer = setInterval(() =>{
    //        this.takePhoto()
    //   }, 2 * 1000)
  },
  takePhoto() {
    let _this = this
    // 调用相机组件的照相功能
    this.$element('camera').takePhoto({
      // 通过quality参数设置照片质量 默认为normal
      quality: _this.photoQuality,
      success(data) {
        // 获取回调中的照片地址
        _this.pictureUrl = data.uri;
        console.log(data);
        // QRCode.toDataURL(data.uri)
        //   .then(url => {
        //     console.log(url)
        //   })
        //   .catch(err => {
        //     console.error(err)
        //   })
        console.log(_this.pictureUrl);
      },
      fail(data, code) {
        console.log('take photos failed：code' + code.code)
      },
      complete() {
        console.log('complete')
      }
    })
  },
  // 切换闪关灯
  switchFlash() {
    const flashArr = ['auto', 'on', 'off', 'torch']
    const textArr = ['自动', '开', '关', '常亮']
    const index = flashArr.indexOf(this.flash)

    if (index >= 3) {
      this.flash = flashArr[0]
    }
    else {
      this.flash = flashArr[index + 1]
    }

    this.flashText = textArr[flashArr.indexOf(this.flash)]
  },
  // 权限不允许处理
  handlerError() {
    console.log('用户不允许使用摄像头')
  },
  takeImg() {
    media.pickImage({
      success: function (data) {
        console.log(`handling success: ${data.uri}`)
      },
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
  },
  goBack(){
     router.back()
  }
}
</script>
<style>
.container {
  flex-direction: column;
  align-items: center;
}

.camera {
  flex: 1;
}
.btn {
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin: 30px;
  padding: 30px 100px;
  position: fixed;
  bottom: 70px;
}
.title-bar{
  position: fixed;
  top:40px;
  padding-left: 60px;
 
}
 .center-title{
    font-size: 40px;
    text-align: left;
    padding-right: 100px;
    color: #fff;
  }
</style>