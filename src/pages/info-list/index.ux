<import name="my-avatar" src="apex-ui/components/avatar/index"></import>
<template>
  <div class="page-wrapper">
    <title-bar
      title="{{title}}"
      show-back="{{true}}"
      icon="{{icon}}"
      onget-click="getClick"
    ></title-bar>
    <div if="{{suspensionDialog}}" 
      style="right: {{menuStyle.left+'px'}}; top:{{menuStyle.top+'px'}};position: fixed;"
      ontouchstart="menuTouchStart"
      ontouchmove="menuTouchMove"
      ontouchend="menuTouchEnd"
     >
     <my-avatar src="{{suspensionData.picture}}" @click="getSuspension" size="default"></my-avatar>
    </div>
    <div style="margin-top:100px">
      <text style="color:#000" class="title"></text>
    </div>
    <div class="content">
      <web
        class="web-comp"
        src="{{websrc}}"
        id="web"
        allowthirdpartycookies="true"
        onpagestart="onPageStart"
        onpagefinish="onPageFinish"
        ontitlereceive="onTitleReceive"
        onerror="onError"
      ></web>
    </div>
    <div class="return-btn" @click="goto">
      <image class="re-img" src="../../assets/images/return-home.png"></image>
    </div>
    <div class="test" if="{{showContent}}">
      <div class="maskBox" @click="close"></div>
      <div class="model translateYByEntry">
        <div class="btn" @click="getCopyUrl">
          <image class="img" src="../../assets/images/copy.png"></image>
          <text>复制链接</text>
        </div>
        <div class="btn" @click="getRefresh">
          <image class="img" src="../../assets/images/index/refresh.png"></image>
          <text>刷新</text>
        </div>
        <div class="btn" @click="getHome">
          <image class="img" src="../../assets/images/r-home.png"></image>
          <text>首页</text>
        </div>
      </div>
    </div>
    <div class="adimg-box" if="{{adDialog}}" @click="closeAd">
      <div class="box" >
        <div class="adClose" @click="closeDialog">
          <image class="close" src="../../assets/images/dialong.png"></image>
        </div>
        <div @click="openUrl" class="adImg">
          <image class="img" src="{{adData.picture}}"></image>
        </div>
      </div>
    </div>
  </div>
</template>
<import name="title-bar" src="../../components/common/bar/title-bar"></import>
<script>
import prompt from '@system.prompt'
import clipboard from '@system.clipboard'
import router from '@system.router'
import pkg from '@system.package'
import device from '@system.device';
export default {
  data: {
    showContent: false,
    adDialog: false,
    id: "",
    articleData: "",
    category: '插屏',
    scene: '其它',
    adData: '',
    title: '资讯列表',
    icon: require('../../assets/images/more.png'),
    historyData: [],
    header: {
      deviceId: "",
      token: "",
    },
    href: "",
    suspensionDialog: false,
    suspensionData: "",
    menuStyle: {
      left: 60, 
      top: 200,
      disX: 0,
      disY: 0
    },
    beginDrag: false,
    devices: "",
    content: "",
    hUrl: "",
    titleName: "",
  },
  onInit() {
    let url = JSON.parse(this.nav)
    this.websrc = url[0].url;
    var page = router.getState()
    // this.href= this.$app.$def.appData.BaseUrl+page.path +'/'+ this.id;
     this.href= this.$app.$def.appData.BaseUrl+page.path;
    // this.getHistoy();
    // 获取设备id
    $utils.getStorage('deviceId').then(value => {
      this.header.deviceId = value;
      //  this.queryActicle();
      this.getSuspensionAd();
      let timer = setTimeout(() =>{
         this.getAd();
      }, 3* 1000)
    })
    // 获取搜索历史
    $utils.getStorage('historyData').then(value => {
        this.historyData = JSON.parse(value);
    }) 
    // 判断是否登录状态
    $utils.getStorage('token').then(value => {
      this.header.token = value;
    })
    let _this = this;
    device.getInfo({
      success: function (ret) {
       _this.devices = ret;
      }
    })
    this.copyUrl()
  },
  onReady() {
    this.showContent = false;
  },
  onShow() {
    let name = "资讯列表"
    // this.addHistoryData( name, this.href)   
  },
  addHistoryData(title, url) {
    var now = new Date();
    var year = now.getFullYear(); //得到年份
    var month = now.getMonth() + 1;//得到月份
    var date = now.getDate();//得到日期
    let nowDate = year + "-" + month + "-" + date;
    if (this.historyData.length > 20) {
      this.historyData.pop();
      this.historyData.unshift({ time: nowDate, list: { title: title, url: url } });
      $utils.setStorage('historyData', this.historyData);
    } else {
      this.historyData.unshift({ time: nowDate, list: { title: title, url: url } });
      $utils.setStorage('historyData', this.historyData);
    }
  },
  getHistoy() {
    // 获取搜索历史
    $utils.getStorage('historyData').then(value => {
      this.historyData = JSON.parse(value);
    })
  },
  queryActicle() {
    $apis.common.getArticleDetail(this.id, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        this.articleData = data.article;
        this.addHistoryData();
      } else {
        prompt.showToast({
          message: data.message
        });
      }
    })
  },
  goto(){
     router.back()
  },
  getHome() {
    $utils.route2theUrl('pages/index')
  },
  closeAd() {
    this.adDialog = false;
  },
  closeDialog() {
    this.adDialog = false;
  },
  // 设置复制
  copyUrl() {
    clipboard.set({
      text: this.nav[0].url,
    })
    
  },
  // 获取复制
  getCopyUrl() {
    clipboard.get({
      success: function (data) {
      },
    })
    prompt.showToast({
      message: '复制成功'
    });
    this.close();
  },
  close() {
    this.showContent = false;
  },
  getRefresh() {
    this.close();
  },
  stopPropagation() {
  },
  // 获取广告
  getAd() {
    let para = new Object();
    para.category = this.category;
    para.scene = this.scene;
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        this.adDialog = true;
        this.adData = data.ad;
        this.getAllAd("open");
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 广告跳转
  openUrl() {
    let _this = this;
    pkg.hasInstalled({
      package: _this.adData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.adData.link
          })
        } else {
          router.push({
            uri: _this.adData.fallbackLink
          })
        }
        _this.getAllAd("click");
      },
    })
  },
  // 广告点击，展示加载完请求的事件
  getAllAd(val) {
    let para = new Object();
    para.id = this.adData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  getClick() {
    this.showContent = true;
  },
   // 获取悬浮广告
  getSuspensionAd(){
     let para = new Object();
    para.category = '浮窗';
    para.scene = '其它';
    $apis.common.getAd(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code == 0) {
        if (data.ad) {
          this.suspensionDialog = true;
          this.suspensionData = data.ad;
          this.clickSuspension("open");
        }
      } else {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 悬浮广告跳转
  getSuspension(){
    let _this = this;
    pkg.hasInstalled({
      package: _this.suspensionData.packageName,
      success: function (data) {
        if (data.result == true) {
          router.push({
            uri: _this.suspensionData.link
          })
        } else {
          router.push({
            uri: _this.suspensionData.fallbackLink
          })
        }
        _this.clickSuspension("click");
      },
    })
  },
  // 悬浮广告的点击
  clickSuspension(val) {
    let para = new Object();
    para.id = this.suspensionData.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
   menuTouchStart(event) {
    this.beginDrag = true;
    this.menuStyle.disX = event.touches[0].offsetX;
    this.menuStyle.disY = event.touches[0].offsetY
  },
  menuTouchMove(event) {
    if (this.beginDrag) {
      event.stopPropagation()
      let resetDeviceScreenWidth = event.touches[0].clientX > this.devices.windowWidth ? ((this.devices.windowWidth / this.devices.screenDensity) * 4) : this.devices.windowWidth;
      let resetDeviceScreenHeight = event.touches[0].clientY > this.devices.windowHeight ? ((this.devices.windowHeight / this.devices.screenDensity) * 3) : this.devices.windowHeight;
      let menuStyleLeft = event.touches[0].clientX - this.menuStyle.disX;
      let menuStyleTop = event.touches[0].clientY - this.menuStyle.disY;
      this.menuStyle.left = menuStyleLeft < 0 ? (menuStyleLeft > (resetDeviceScreenWidth - 104) ? resetDeviceScreenWidth + 104 : menuStyleLeft) : 10;
      this.menuStyle.top = menuStyleTop > 0 ? (menuStyleTop > (resetDeviceScreenHeight - 800) ? resetDeviceScreenHeight - 800 : menuStyleTop) : 200;
    }
  },
  menuTouchEnd() {
    this.beginDrag = false;
    this.menuStyle.disX = this.menuStyle.disY = 0;
  },
  onPageStart(e) {
    this.hUrl = e.url;
  },
  onTitleReceive(e) {
    this.titleName = e.title;
    // let url = this.hUrl +"/s?wd="+this.titleName
    this.addHistoryData( this.titleName, this.hUrl);
  },
  onError() {
    console.info('### pageError ###')
  },
  arrowLeftIcon() {
    this.isCanBack()
  },
  arrowRightIcon() {
    this.isCanForward()
  },
  isCanForward() {
    this.$element('web').canForward({
      callback: function (e) {
        if (e) {
          this.$element('web').forward()
        }
      }.bind(this)
    })
  },
  isCanBack() {
    this.$element('web').canBack({
      callback: function (e) {
        if (e) {
          this.$element('web').back()
        } else {
          router.back()
        }
      }.bind(this)
    })
  },
}
</script>

<style lang="less">
@import '../../assets/styles/index.less';
.page-wrapper {
  font-size: 26px;
  .img {
    width: 100%;
    align-content: center;
  }
  padding: 20px 30px;
  background-color: #fff;
  .ad-btn {
    width: 110px;
    height: 110px;
    position: fixed;
    top: 140px;
    right: 30px;
    .ad-img {
      width: 100px;
      height: 100px;
      align-content: center;
      border-radius: 50%;
    }
  }
  .return-btn {
    width: 120px;
    height: 140px;
    position: fixed;
    bottom: 60px;
    right: 30px;
    align-items: center;
    .re-img {
      width: 100%;
      height: 100%;
    }
  }
  .title {
    font-size: 36px;
    line-height: 50px;
    margin-bottom: 20px;
  }
  .content {
    font-size: 28px;
    line-height: 20px;
    margin-bottom: 20px;
    .rich-text {
      img {
        width: 100%;
        height: 400px;
      }
    }
  }
  .picture {
    width: 100%;
  }
}

@keyframes translateYByEntry {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-700px);
  }
}
@keyframes translateYByLeave {
  from {
    transform: translateY(-700px);
  }
  to {
    transform: translateY(0);
  }
}
.translateYByEntry {
  animation-name: translateYByEntry;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.translateYByLeave {
  animation-name: translateYByLeave;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.test {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.4);
  padding-bottom: 400px;
  .model {
    width: 100%;
    height: 250px;
    position: fixed;
    left: 0;
    bottom: -700px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    background-color: #ffffff;
    z-index: 10;
    padding-top: 50px;
    padding: 0px 60px;
    font-size: 30px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    .btn {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .img {
        width: 80px;
        height: 80px;
      }
    }
  }
}
.maskBox {
  width: 100%;
  height: 100%;
}
.adimg-box {
  width: 100%;
  position: fixed;
  margin: 0 auto;
  background-color: rgba(0, 0, 0, 0.4);
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  .box {
     width: 100%;
    padding: 0px 60px;
   .flex-box-mixins(column, center, center);
    .adClose {
      width: 100%;
      margin-top: 20px;
      .flex-box-mixins(column, flex-end, flex-end);
      .close {
        width: 50px;
        height: 50px;
      }
    }
    .adImg {
     .flex-box-mixins(column, center, center);
      width: 400px;
      height: 400px;
      margin-top: 20px;
      .img{
         width: 100%;
      }
    }
  }
}
.content {
    flex:1;
  }
</style>
