<import name="my-avatar" src="apex-ui/components/avatar/index"></import>
<template>
  <div class="page-wrapper">
    <div class="ad-btn" @click="dialog">
       <my-avatar src="{{ floatAd.picture}}" size="default"></my-avatar>
      <!-- <image class="ad-img" src="{{ floatAd.picture}}"></image> -->
    </div>
    <div class="reportBox" @click="getReport">
      <text style="color: #fff;">举报</text>
    </div>
    <div class="logo-box">
      <image class="logo" src="../../assets/images/logo.png"></image>
    </div>
    <div class="title-bar">
      <div class="search-box">
        <div class="search">
          <text class="search-input" onclick="toSearch"></text>
          <image class="img" src="../../assets/images/saoma.png" onclick="toSaoma"></image>
        </div>
      </div>
    </div>
    <div class="menuBox">
      <div for={{menuList}} class="menuList" @click="gotoUrl($item.link)">
        <div class="img-menu">
          <my-avatar src={{$item.picture}} size="large"></my-avatar>
          <!-- <image class="img" src={{$item.picture}}></image> -->
        </div>
        <text style="font-size:26px;text-align: center;padding:15px 0;color:#000">{{$item.title}}</text>
      </div>
      <div class="menuList" @click="addMenu">
        <div class="img-menu">
           <my-avatar src="../../assets/images/index/menuAdd.png" size="large"></my-avatar>
          <!-- <image class="img" src='../../assets/images/index/menuAdd.png'></image> -->
        </div>
        <text style="text-align: center;padding: 0;color:#000"></text>
      </div>
      <div class="menuList">
      </div>
      <div class="menuList">
      </div>
      <div class="menuList">
      </div>
    </div>
    <!-- 底部菜单 -->
    <div class="bottom">
      <div class="b-box">
        <image src="../../assets/images/index/index-active.png" />
        </image>
      </div>
      <div class="b-box" @click="getRouterinfo()">
        <image src="../../assets/images/index/info.png"></image>
      </div>
      <div class="b-box" @click="getRouterCollect()">
        <image src="../../assets/images/index/collect.png"></image>
      </div>
      <div class="b-box" @click="getPopup()">
        <image src="../../assets/images/index/set.png"></image>
      </div>
    </div>
    <!--弹窗登录 -->
    <div class="test" if={{showContent}} onclick="stopPropagation()">
      <div class="maskBox" @click="closeBox"></div>
      <div class="model translateYByEntry">
        <div class="popupBottom">
          <div class="avatar-box">
            <div class="avatar-img">
              <img src="{{defaultAvatar}}" />
            </div>
            <div class="login-btn">
              <text class="login-title" if={{logined}}>已登录</text>
              <text class="login-title" else @click="login">点击登录</text>
              <text class="login-btn-title">欢迎使用XX浏览器</text>
            </div>
            <text class="btn" if={{addFlag}} >已加入桌面</text>
            <text class="btn" else   @click="addShortCut">加入桌面</text>
            
            
          </div>
          <div class="menu">
            <div class="menu-item" @click="getRouter('dol')">
              <image src="../../assets/images/index/download.png"> </image>
              <text>下载管理</text>
            </div>
            <div class="menu-item" @click="getRouter('collection')">
              <image src="../../assets/images/index/collect-1.png"></image>
              <text>添加收藏</text>
            </div>
            <div class="menu-item" @click="getRouter('history')">
              <image src="../../assets/images/index/history.png"></image>
              <text>历史记录</text>
            </div>
            <div class="menu-item" @click="openDialog">
              <image src="../../assets/images/index/complaint.png"></image>
              <text>投诉反馈</text>
            </div>
            <div class="menu-item" @click="getRouter('set')">
              <image src="../../assets/images/index/set-btn.png"></image>
              <text>设置</text>
            </div>
            <div class="menu-item" @click="refresh">
              <image src="../../assets/images/index/refresh.png"></image>
              <text>刷新</text>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- 广告 -->
    <div class="adimg-box" if={{adDialog}} onclick="stopPropagation()">
      <div class="box">
        <div class="adClose" @click="closeDialog">
          <image class="close" src="../../assets/images/close-index.png"></image>
        </div>
        <div class="adImg" @click="gotoAd">
          <image class="img" src="{{ floatAd.picture }}"></image>
        </div>
      </div>
    </div>
    <!-- 反馈 -->
    <feedback if={{feedbackDailog}} @close="closeFeedback"></feedback>
  </div>
</template>
<import  name="feedback" src="../../components/feedback/index"></import>
<script>
import router from '@system.router';
import webview from '@system.webview'
import barcode from '@system.barcode';
import device from '@system.device';
import prompt from '@system.prompt'
import shortcut from '@system.shortcut'
import storage from '@system.storage'
export default {
  protected: {
    logined: false,
    showContent: false,
    adDialog: false,
    feedbackDailog: false,
  },
  private: {
    floatAd: "",
    defaultAvatar: require('../../assets/images/index/default-avatar.png'),
    menuList: [],
    device: {
      id: "",
      imei: "",
      brand: "",
      manufacturer: "",
      model: "",
      osType: "",
      osVersionName: "",
      osVersionCode: "",
      platformVersionName: "",
      platformVersionCode: "",
      region: "",
      screenWidth: 0,
      screenHeight: 0
    },
    packages: [],
    header: {
      deviceId: "",
      token: "",
    },
    flag: false,
    addFlag: false,
  },
  onInit() {
    let _this = this;
     _this.getToken();
    _this.getShortCut();
    _this.showContent = false;
    //获取设备DeviceId
    device.getDeviceId({
      success: function (data) {
        _this.device.id = data.deviceId;
        _this.header.deviceId = data.deviceId;
        $utils.setStorage('deviceId', `${data.deviceId}`);
        _this.getLoad();

      },
      fail: function (data, code) {
      }
    })
  },
  // 获取设备信息
  getLoad() {
    let _this = this;
    // 获取设备信息
    device.getInfo({
      success: function (ret) {
        _this.device.brand = ret.brand;
        _this.device.manufacturer = ret.manufacturer;
        _this.device.model = ret.model;
        _this.device.osType = ret.osType;
        _this.device.osVersionName = ret.osVersionName;
        _this.device.osVersionCode = ret.osVersionCode;
        _this.device.platformVersionName = ret.platformVersionName;
        _this.device.platformVersionCode = ret.platformVersionCode;
        _this.device.region = ret.region;
        _this.device.screenWidth = ret.screenWidth;
        _this.device.screenHeight = ret.screenHeight;
        let para = new Object();
        var device = require('@system.device')
        var host = device.host;
        if (host) {
          _this.packages.push(host.package);
        }
        para.device = _this.device;
        para.packages = _this.packages;

        $apis.common.getLaunch(para, _this.header).then((res) => {
          let data = JSON.parse(res.data);
          _this.menuList = data.flatAds;
          _this.floatAd = data.floatAd;
          _this.getAllAd("open");
        })
      }
    })
  },
  // 判断是否加入桌面图标
 async getShortCut() {
   let _this = this;
   await shortcut.hasInstalled({
      success: function (data) {
        $utils.setStorage('addFlag', data);
        _this.addFlag = data;
      }
    })
  },
  // 判断是否登录状态
  async getToken(){ 
   await $utils.getStorage('token').then(value => {
      this.header.token = value;
      this.logined = true;
    })
  },
  onReady() {
    this.get()

  },
  async get() {
    let _this = this
    await storage.get({
      key: 'searchEngineId',
      success: function (data) {
        if(data){
           _this.flag = true;
        }else{
         _this.getSearchList();
        }
      },
    })
  },
  //弹出底部 
  getPopup() {
    this.showContent = true;
  },
  // 关闭底部弹窗
  closeBox() {

    this.showContent = false;
  },
  closeFeedback() {
    this.feedbackDailog = false;
  },
  openDialog() {
    this.showContent = false;
    this.feedbackDailog = true;
  },
  getReport() {
    this.feedbackDailog = true;
  },
  // 资讯跳转路由
  getRouterinfo() {
    $utils.route2theUrl('pages/information');
  },
  getRouterCollect() {
    if (this.logined == true) {
      router.push({
        uri: 'pages/collection'
      })
    } else {
      router.push({
        uri: 'pages/login'
      })
    }
  },
  toSearch() {
    $utils.route2theUrl('pages/search', {})
  },
  // 菜单跳转
  getRouter(type) {
    this.showContent = false;
    switch (type) {
      case 'dol':
        $utils.route2theUrl('pages/download');
        break;
      case 'collection':
        if (this.logined == true) {
          $utils.route2theUrl('pages/collection')
        } else {
          $utils.route2theUrl('pages/login')
        }
        break;
      case 'history':
        $utils.route2theUrl('pages/history')
        break;
      case 'set':
        $utils.route2theUrl('pages/set', { logined: this.logined });
        break;
      default:
        break;
    }
  },
  // 登录
  login() {
    router.push({
      uri: 'pages/login'
    });
    this.showContent = false;
  },
  onCancel() { },
  onBackPress() {
    this.showContent = false;
    console.info(`触发：onBackPress`)
  },
  onDestroy() {
    this.showContent = false;
    console.info(`触发：onDestroy`);
  },
  addMenu() {
    if (this.logined == true) {
      router.push({
        uri: 'pages/addMenu'
      })
    }
    else {
      router.push({
        uri: 'pages/login'
      })
    }
    this.showContent = false;
  },
  // 跳转
  gotoUrl(val) {
    // webview.loadUrl({
    //   url: val,
    // })
    // location.href = val;
    router.push({
      uri: val
    })
  },
  // 阻止冒泡
  stopPropagation() { },
  dialog() {
    this.adDialog = true;
  },
  closeDialog() {
    this.adDialog = false;
  },
  // 扫码
  toSaoma() {
    barcode.scan({
      success: function (data) {
        webview.loadUrl({
          url: data.result,
          allowthirdpartycookies: true
        })
      },
      fail: function (data, code) {
      }
    })
  },
  // 广告跳转
  gotoAd() {
    this.getAllAd("click");
    router.push({
      uri: this.floatAd.link
    })
    // location.href = this.floatAd.link;
  },
  // 广告点击，展示加载完请求的事件
  getAllAd(val) {
    let para = new Object();
    para.id = this.floatAd.id;
    if (val == "open") {
      para.opt = 0;
    } else if (val == "click") {
      para.opt = 1;
    }
    $apis.common.getAdOpt(para, this.header).then((res) => {
      let data = JSON.parse(res.data);
      if (data.code != 0) {
        prompt.showToast({
          message: data.message
        })
      }
    })
  },
  // 刷新
  refresh() {
    this.getLoad();
    prompt.showToast({
      message: "刷新成功"
    });
    this.showContent = false;
  },
  // 设置默认的搜索引擎
  getSearchList() {
    if (this.flag == false) {
      $apis.common.getSearchEngines({}, this.header).then((res) => {
        let data = JSON.parse(res.data);
        if (data.code == 0) {
          $utils.setStorage('searchEngineId', data.searchEngines);
        } else {
          prompt.showToast({
            message: data.message
          })
        }
      })
    }

  },
  // 加入桌面
  addShortCut() {
    let _this = this;
    shortcut.install({
      success: function (data) {
        _this.addFlag = true;
        $utils.setStorage('addFlag', true);
        prompt.showToast({
          message: '创建成功'
        })
      },
      fail: function (errmsg, errcode) {
      }
    })
  },
}
</script>

<style lang="less">
@import '../../assets/styles/index.less';
.page-wrapper {
  background-color: #fff;
  .ad-btn {
    width: 110px;
    height: 110px;
    position: fixed;
    top: 100px;
    right: 30px;
    .ad-img {
      width: 100px;
      height: 100px;
      align-content: center;
      border-radius: 50px;
    }
  }
  .reportBox {
    width: 100px;
    height: 100px;
    position: fixed;
    bottom: 140px;
    right: 30px;
    background-color: #567aff;
    border-radius: 50px;
    justify-content: center;
  }
  .title-bar {
    padding: 10px 30px;
    border-bottom: 1px solid rgba(149, 149, 149, 0);
    .search-box {
      width: 100%;
      .search {
        align-items: center;
        justify-content: center;
        .search-input {
          width: 84%;
        }
        .img {
          margin-left: 10px;
        }
      }
    }
  }
  .logo-box {
    width: 100%;
    margin-top: 300px;
    margin-bottom: 50px;
    justify-content: center;
    .logo {
      width: 180px;
      height: 180px;
    }
  }
  .title {
    margin: 0 auto;
    height: 37px;
    font-size: 40px;
    color: #000000;
    line-height: 60px;
    margin-bottom: 50px;
  }
  .bottom {
    text-align: center;
    position: fixed;
    bottom: 0;
    width: 100%;
    height: 120px;
    z-index: 999;
    background-color: #fff;
    border-top: 1px solid rgba(149, 149, 149, 0.2);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 9999;
    .b-box {
      width: 100%;
      height: 100%;
      align-items: center;
      justify-content: center;
      image {
        /* width: 45px;
       height: 100%; */
        margin: 0px 50px;
      }
    }
  }
  .menuBox {
    padding: 20px 30px;
    width: 100%;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-between;
    .menuList {
      width: 150px;
      height: 200px;
      margin: 0 10px;
      flex-direction: column;
      align-items: center;
      .img-menu {
        width: 120px;
        height: 120px;
      }
    }
  }
}
.popupBottom {
  .flex-box-mixins(column, space-between, space-between);
  width: 100%;
  padding: 20px;
  .avatar-box {
    width: 100%;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    padding: 40px 40px 20px 0;
    margin: 0px 30px;
    .avatar-img {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      image {
        width: 100%;
        height: 100%;
        margin: 0;
      }
    }
    .login-btn {
      .flex-box-mixins(column, flex-start, flex-start);
      text-align: right;
      width: 40%;
      .login-title {
        font-size: 30px;
        font-weight: 600;
        color: #000;
        line-height: 60px;
      }
      .login-btn-title {
        font-size: 20px;
        font-weight: 400;
        color: #999999;
      }
    }
    .btn {
      width: 200px;
      background-color: #567aff;
      border-radius: 50px;
      color: #fff;
      height: 80px;
      line-height: 80px;
      font-size: 30px;
      text-align: center;
    }
  }
  .menu {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    font-size: 24px;
    font-weight: 400;
    color: #2c2c2c;
    image {
      width: 70px;
      height: 70px;
    }
    .menu-item {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 25%;
      margin: 20px 0;
      text-align: center;
    }
  }
}
@keyframes translateYByEntry {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-700px);
  }
}
@keyframes translateYByLeave {
  from {
    transform: translateY(-700px);
  }
  to {
    transform: translateY(0);
  }
}
.translateYByEntry {
  animation-name: translateYByEntry;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.translateYByLeave {
  animation-name: translateYByLeave;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}
.test {
  z-index: 9999;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.4);
  border: 1px solid #000000;
  padding-bottom: 600px;
  .model {
    width: 100%;
    height: 600px;
    position: fixed;
    left: 0;
    bottom: -700px;
    border-top-left-radius: 40px;
    border-top-right-radius: 40px;
    background-color: #ffffff;
    display: flex;
    flex-direction: column;
    .btn {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .img {
        width: 80px;
        height: 80px;
      }
    }
  }
  .maskBox {
    width: 100%;
    height: 100%;
  }
}
.adimg-box {
  width: 100%;
  position: fixed;
  margin: 0 auto;
  background-color: rgba(0, 0, 0, 0.4);
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  .box {
    width: 100%;
    padding: 0px 60px;
    .flex-box-mixins(column, center, center);
    .adClose {
      width: 100%;
      margin-top: 20px;
      .flex-box-mixins(column, flex-end, flex-end);
      .close {
        width: 50px;
        height: 50px;
      }
    }
    .adImg {
      .flex-box-mixins(column, center, center);
      width: 100%;
      height: 260px;
      margin-top: 20px;
      .img {
        width: 100%;
        height: 100%;
      }
    }
  }
}
</style>
